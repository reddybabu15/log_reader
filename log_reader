import os
from datetime import datetime

def read_reverse_order(file_name):
    # Open file for reading in binary mode
    with open(file_name, 'rb') as read_obj:
        # Move the cursor to the end of the file
        read_obj.seek(0, os.SEEK_END)
        # Get the current position of pointer i.e eof
        pointer_location = read_obj.tell()
        # Create a buffer to keep the last read line
        buffer = bytearray()
        # Loop till pointer reaches the top of the file
        while pointer_location >= 0:
            # Move the file pointer to the location pointed by pointer_location
            read_obj.seek(pointer_location)
            # Shift pointer location by -1
            pointer_location = pointer_location -1
            # read that byte / character
            new_byte = read_obj.read(1)
            # If the read byte is new line character then it means one line is read
            if new_byte == b'\n':
                # Fetch the line from buffer and yield it
                yield buffer.decode()[::-1]
                # Reinitialize the byte array to save next line
                buffer = bytearray()
            else:
                # If last read character is not eol then add it in buffer
                buffer.extend(new_byte)
        # As file is read completely, if there is still data in buffer, then its the first line.
        if len(buffer) > 0:
            # Yield the first line too
            yield buffer.decode()[::-1]

def main():
    # Iterate over the file in reverse order using for loop
    for line in read_reverse_order('samp.txt'):
        #print(line)
        if "[Error]"  in line :
            #fetching str time from each line of log
            timestamp_log=line[11:19]
            #converting it into dattime obj
            time_obj=datetime.strptime(timestamp_log,"%H:%M:%S")
            #difference between times
            diff=time_now-time_obj
            if diff.seconds <= time:
                print(line[21:])
if __name__ == '__main__':
   #current time 
   time_now=datetime.now().strftime("%H:%M:%S")
   time_now=datetime.strptime(time_now,"%H:%M:%S")
   #sechduling time converting into seconds
   time=5*60
   main()
  
